// <auto-generated />
using System;
using InterVenture.Restaurant.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterVenture.Restaurant.Infrastructure.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20230605125816_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DishMeal", b =>
                {
                    b.Property<int>("DishesId")
                        .HasColumnType("int");

                    b.Property<int>("MealsId")
                        .HasColumnType("int");

                    b.HasKey("DishesId", "MealsId");

                    b.HasIndex("MealsId");

                    b.ToTable("DishMeal");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.DishMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("MealId");

                    b.ToTable("DishMeals");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.ProductItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ShoppingCartDetailId")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShoppingCartDetailId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Offset")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Views.PricePreview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PricePreviews");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Views.ShoppingCartDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCartDetails");
                });

            modelBuilder.Entity("DishMeal", b =>
                {
                    b.HasOne("InterVenture.Restaurant.Domain.Models.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterVenture.Restaurant.Domain.Models.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.DishMeal", b =>
                {
                    b.HasOne("InterVenture.Restaurant.Domain.Models.Dish", "Dish")
                        .WithMany("DishMeals")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterVenture.Restaurant.Domain.Models.Meal", "Meal")
                        .WithMany("DishMeals")
                        .HasForeignKey("MealId");

                    b.Navigation("Dish");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.ProductItem", b =>
                {
                    b.HasOne("InterVenture.Restaurant.Domain.Models.Order", null)
                        .WithMany("ProductItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("InterVenture.Restaurant.Domain.Views.ShoppingCartDetail", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartDetailId");

                    b.HasOne("InterVenture.Restaurant.Domain.Models.ShoppingCart", null)
                        .WithMany("ProductItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Dish", b =>
                {
                    b.Navigation("DishMeals");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Meal", b =>
                {
                    b.Navigation("DishMeals");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.Order", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Models.ShoppingCart", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("InterVenture.Restaurant.Domain.Views.ShoppingCartDetail", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
